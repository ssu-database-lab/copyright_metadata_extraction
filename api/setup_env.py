#!/usr/bin/env python3
"""
Environment Setup Script for OCR Module
Helps configure API keys and credentials
"""

import os
from pathlib import Path

def setup_env_files():
    """Set up environment files with user input"""
    
    print("=" * 60)
    print("OCR Module Environment Setup")
    print("=" * 60)
    
    # Check existing .env files
    env_files = {
        'main': Path('.env'),
        'alibaba': Path('.env_alibaba'),
        'ocr': Path('../OCR/google_vision/.env')
    }
    
    print("\nChecking existing environment files:")
    for name, path in env_files.items():
        if path.exists():
            print(f"  ✓ {name}: {path}")
        else:
            print(f"  ✗ {name}: {path} (not found)")
    
    print("\n" + "=" * 60)
    print("API Key Configuration")
    print("=" * 60)
    
    # Collect API keys
    api_keys = {}
    
    print("\n1. Mistral AI API Key")
    print("   Get your key from: https://console.mistral.ai/")
    mistral_key = input("   Enter Mistral API key (or press Enter to skip): ").strip()
    if mistral_key:
        api_keys['MISTRAL_API_KEY'] = mistral_key
    
    print("\n2. Alibaba Cloud API Key")
    print("   Get your key from: https://dashscope.console.aliyun.com/")
    alibaba_key = input("   Enter Alibaba Cloud API key (or press Enter to skip): ").strip()
    if alibaba_key:
        api_keys['DASHSCOPE_API_KEY'] = alibaba_key
        api_keys['ALIBABA_API_KEY'] = alibaba_key
    
    print("\n3. Naver Clova OCR API")
    print("   Get your credentials from: https://www.ncloud.com/")
    naver_url = input("   Enter Naver OCR API URL (or press Enter to skip): ").strip()
    naver_secret = input("   Enter Naver OCR Secret Key (or press Enter to skip): ").strip()
    if naver_url and naver_secret:
        api_keys['NAVER_OCR_API_URL'] = naver_url
        api_keys['NAVER_OCR_SECRET_KEY'] = naver_secret
    
    # Create .env file
    if api_keys:
        env_content = """# OCR API Configuration
# Generated by setup_env.py

"""
        
        for key, value in api_keys.items():
            env_content += f"{key}={value}\n"
        
        env_content += """
# Google Cloud credentials are handled via the JSON file
# GOOGLE_APPLICATION_CREDENTIALS is set in the code

# Instructions:
# 1. Keep this file secure and never commit it to version control
# 2. Get your API keys from:
#    - Mistral: https://console.mistral.ai/
#    - Alibaba Cloud: https://dashscope.console.aliyun.com/
#    - Naver Clova: https://www.ncloud.com/
# 3. API keys for Singapore and China regions are different
"""
        
        # Write main .env file
        with open('.env', 'w', encoding='utf-8') as f:
            f.write(env_content)
        
        print(f"\n✅ Created .env file with {len(api_keys)} API keys")
        
        # Create Alibaba-specific .env file if Alibaba key provided
        if 'DASHSCOPE_API_KEY' in api_keys:
            alibaba_content = f"""# Alibaba Cloud Model Studio API Configuration
DASHSCOPE_API_KEY={api_keys['DASHSCOPE_API_KEY']}
ALIBABA_API_KEY={api_keys['ALIBABA_API_KEY']}

# Instructions:
# 1. Keep this file secure and never commit it to version control
# 2. Get your API key from: https://dashscope.console.aliyun.com/
# 3. API keys for Singapore and China regions are different
# 4. Documentation: https://www.alibabacloud.com/help/en/model-studio/use-qwen-by-calling-api
"""
            
            with open('.env_alibaba', 'w', encoding='utf-8') as f:
                f.write(alibaba_content)
            
            print("✅ Created .env_alibaba file")
        
        # Copy to OCR directory
        ocr_env_path = Path('../OCR/google_vision/.env')
        if ocr_env_path.parent.exists():
            with open(ocr_env_path, 'w', encoding='utf-8') as f:
                f.write(env_content)
            print(f"✅ Copied .env to {ocr_env_path}")
        
    else:
        print("\n⚠️  No API keys provided. Environment files not created.")
        print("   You can manually edit the template files:")
        print("   - .env (main configuration)")
        print("   - .env_alibaba (Alibaba Cloud specific)")
    
    print("\n" + "=" * 60)
    print("Next Steps")
    print("=" * 60)
    print("1. Test the configuration:")
    print("   python test_universal_ocr.py")
    print("\n2. Start the web interface:")
    print("   cd web && python app.py")
    print("\n3. Access the API documentation:")
    print("   http://localhost:5000/docs")

def check_google_credentials():
    """Check Google Cloud credentials"""
    print("\n" + "=" * 60)
    print("Google Cloud Credentials Check")
    print("=" * 60)
    
    # Check for credentials file
    cred_paths = [
        Path('../OCR/google_vision/semiotic-pager-466612-t0-c587b9296fb8.json'),
        Path('google_credentials.json'),
        Path('credentials.json')
    ]
    
    found_cred = False
    for cred_path in cred_paths:
        if cred_path.exists():
            print(f"✅ Found Google Cloud credentials: {cred_path}")
            found_cred = True
            break
    
    if not found_cred:
        print("❌ Google Cloud credentials not found")
        print("   Please download your service account key from:")
        print("   https://console.cloud.google.com/iam-admin/serviceaccounts")
        print("   and save it as 'google_credentials.json' in the api directory")
    
    return found_cred

def main():
    """Main setup function"""
    try:
        setup_env_files()
        check_google_credentials()
        
        print("\n" + "=" * 60)
        print("Setup Complete!")
        print("=" * 60)
        print("You can now test the OCR module with:")
        print("python test_universal_ocr.py")
        
    except KeyboardInterrupt:
        print("\n\nSetup cancelled by user.")
    except Exception as e:
        print(f"\nError during setup: {e}")

if __name__ == "__main__":
    main()
